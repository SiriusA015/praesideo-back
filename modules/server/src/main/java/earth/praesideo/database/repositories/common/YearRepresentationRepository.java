package earth.praesideo.database.repositories.common;import earth.praesideo.database.entities.common.YearRepresentationEntity;import org.springframework.data.jpa.repository.JpaRepository;import org.springframework.data.jpa.repository.Query;import org.springframework.data.repository.query.Param;import org.springframework.stereotype.Repository;import java.util.List;@Repositorypublic interface YearRepresentationRepository extends JpaRepository<YearRepresentationEntity, Integer> {    @Query(nativeQuery = true, value = "select * from static.t_ref_years y " +            "where y.calendar_year between " +            " (select min(calendar_year) from trace.t_supply_chain sc " +            " join static.t_ref_years y on sc.year_representation_id = y.year_representation_id " +            " where sc.customer_id = :customerId)" +            "and date_part('year', CURRENT_DATE) order by calendar_year desc")    List<YearRepresentationEntity> findAllBySupplyChainCustomerId(@Param("customerId") Integer customerCompanyId);    @Query(nativeQuery = true, value = "select * " +            "from static.t_ref_years y " +            "where y.year_representation_id in ( " +            "    select sc.year_representation_id from trace.t_supply_chain sc " +            "                      join static.t_ref_years y on sc.year_representation_id = y.year_representation_id " +            "                      join public.t_companies c on c.company_id = sc.supplier_id " +            "    where sc.customer_id = :customerId " +            "      and sc.date_removed is null " +            "      and (c.company_name is not null) " +            "    order by sc.date_added desc " +            ") order by calendar_year desc")    List<YearRepresentationEntity> findCreatedBySupplyChainCustomerId(@Param("customerId") Integer customerCompanyId);    YearRepresentationEntity findByCalendarYear(Integer calenderYear);}